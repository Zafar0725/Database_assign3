name: CI Pipeline

on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: nyc311
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -prootpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=12

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Google Chrome (for headless Selenium)
        uses: browser-actions/setup-chrome@v1

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL and apply schema
        run: |
          sudo apt-get update && sudo apt-get install -y mysql-client curl
          # connect via 127.0.0.1 (host -> service port mapping)
          mysql -h127.0.0.1 -uroot -prootpass -e "CREATE DATABASE IF NOT EXISTS nyc311;"
          mysql -h127.0.0.1 -uroot -prootpass nyc311 < db/schema.sql

      - name: Prepare tiny fixture as ETL input
        run: |
          mkdir -p data
          cp tests/fixtures/311_sample.csv data/311_2023_01.csv

      - name: Point code to CI MySQL host (127.0.0.1 instead of db)
        run: |
          sed -i "s/@db:3306/@127.0.0.1:3306/g" etl/etl.py || true
          sed -i "s/@db:3306/@127.0.0.1:3306/g" app/main.py || true

      - name: Run ETL on fixture
        run: python etl/etl.py

      - name: Start Flask app in background
        env:
          FLASK_APP: app.main
        run: |
          python -m flask run --host=0.0.0.0 --port=5000 &
          for i in {1..30}; do
            if curl -fsS http://localhost:5000 > /dev/null; then
              echo "Flask is up"; break
            fi
            sleep 1
          done

      - name: Run Selenium tests (headless)
        env:
          WDM_LOG: "0"
        run: pytest tests/selenium_test.py -v
